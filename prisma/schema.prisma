generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AIModel {
  id               String   @id @default(uuid())
  modelId          String
  name             String
  provider         String
  supportImage     Boolean  @default(false)
  supportFile      Boolean  @default(false)
  supportWebSearch Boolean  @default(false)
  hasReasoning     Boolean  @default(false)
  isPremium        Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  description      String?
  isActive         Boolean  @default(true)
}

model Message {
  id          String   @id @default(uuid())
  content     String   @db.Text
  reasoning   String?  @db.Text
  role        String
  model       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  webSearch   String[]
  attachments String[]
  threadId    String?
  Thread      Thread?  @relation(fields: [threadId], references: [id], onDelete: Cascade)

  @@unique([threadId, role, createdAt], name: "unique_message")
  @@index([threadId, createdAt])
}

model Thread {
  id        String    @id @default(uuid())
  title     String?
  model     String
  isPinned  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Message   Message[]
  userId    String?
  User      User?     @relation(fields: [userId], references: [clerkId], onDelete: Cascade)

  @@index([updatedAt])
  @@index([userId, createdAt])
}

model User {
  id        String   @id @default(uuid())
  clerkId   String   @unique
  firstName String?
  lastName  String?
  email     String?
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Thread    Thread[]
}
